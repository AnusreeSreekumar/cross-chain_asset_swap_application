type Token = variant { BTC; ETH; ICP };

type SwapRequest = record {
  swap_id: text;
  refund_address: text;
  amount_sats: nat64;
  recipient_address: text;
  source_token: Token;
  target_token: Token;
  status: text;
};

type UserProfile = record {
  wallet_address: text;
  member_since: text;
  balance: nat64;
  status: text;
};

type TokenRate = record {
  token: text;
  usd: float64;
};

service : {
  get_user_profile: (text) -> (UserProfile) query;
  claim_test_tokens: (text) -> ();
  create_swap: (text, nat64, text, Token, Token) -> (SwapRequest);
  swap_tokens: (Token, Token, float64) -> (float64) query;
  all_token_rates: () -> (vec TokenRate) query;
  get_user_swaps: (text) -> (vec SwapRequest) query;
};
